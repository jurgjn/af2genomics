
import ast, collections, datetime, functools, inspect, itertools, math, os, os.path, pickle, requests, shutil, sqlite3, subprocess, sys, zipfile
from pprint import pprint

import numpy as np, scipy as sp, scipy.stats, scipy.stats.contingency
import sklearn as sk, sklearn.decomposition, sklearn.linear_model, sklearn.metrics, sklearn.naive_bayes, sklearn.preprocessing
import matplotlib, matplotlib.pyplot as plt, matplotlib.patches, seaborn as sns, pandas as pd
import statsmodels.stats.multitest

import Bio, Bio.Data.IUPACData, Bio.PDB, Bio.SVDSuperimposer, Bio.SeqUtils

from af2genomics import *

def some_human():
    #EGFR/P00533
    #ERBB2/P04626
    #TP53/P04637
    #MED1/Q15648
    #ATOX1/O00244
    #UBIAD1/Q9Y5Z9
    #return ['P00533', 'P04626', 'P04637', 'Q15648' ]
    return ['O00244', 'Q9Y5Z9', ]

def all_yeast():
    df_ = pd.read_csv('results/yeast/af2.tsv', names=['pdb_gz'])
    df_['struct_id'] = df_['pdb_gz'].map(lambda pdb_gz: os.path.basename(pdb_gz).removesuffix('.pdb.gz'))
    return df_.head(2).tail(1).struct_id.tolist()

rule all:
    # eu-login-39 $ srun -J pty-$(hostname) --ntasks=1 --mem-per-cpu=16G --time=0-12 --tmp=16384 --pty bash
    # $ cd -P af2genomics
    # $ conda activate af2genomics-env
    # $ profile_euler/run_local all --dry-run
    # $ profile_euler/run_slurm all --dry-run
    # $ profile_euler/run_slurm all --keep-going --dry-run
    # $ profile_euler/run_slurm all --delete-temp-output --dry-run
    input:
        [ pfile(struct_id=struct_id, step='af2.trim_bf.repairpdb.pssm', suffix='.zip', base='results/human') for struct_id in some_human() ], # Test on a handful of human structures
        #[ pfile(struct_id=struct_id, step='af2.trim_bf.repairpdb.pssm', suffix='.zip', base='results/yeast') for struct_id in all_yeast() ],
 
